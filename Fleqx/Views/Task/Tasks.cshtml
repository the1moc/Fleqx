@using Fleqx.Models;

@model List<TaskModel>

<div class="filter-container">
    @{Html.RenderPartial("_TaskFilterForm", (TaskFilterModel)ViewBag.filterModel); }
</div>

<div class="tasks-container animated bounceInLeft">
    <div class="section-title hidden">@ViewBag.Title</div>
    <div class="open-container">
        <h4 class="task-heading task-section">Open</h4>
        <button class="content-button add-task add-open hvr-fade" id="1"><i class="glyphicon glyphicon-plus"></i></button>
        @foreach (TaskModel taskModel in Model.Where(model => model.TaskState.TaskStateCurrent == "Open"))
            {
            <div class="open task-item hvr-pop" id="@taskModel.TaskID">
                <div class="task-heading">
                    <h5 class="task-heading task-item">@taskModel.TaskID - <span class="title">@taskModel.TaskTitle</span></h5>
                </div>
                <div class="task-body">
                    <p>@taskModel.TaskDescription</p>
                </div>
            </div>
            }
    </div>
    <div class="active-container">
        <h4 class="task-heading task-section">Active</h4>
        <button class="content-button add-task add-active hvr-fade" id="2"><i class="glyphicon glyphicon-plus"></i></button>
        @foreach (TaskModel taskModel in Model.Where(model => model.TaskState.TaskStateCurrent == "Active"))
            {
            <div class="active task-item hvr-pop" id="@taskModel.TaskID">
                <div class="task-heading">
                    <h5 class="task-heading task-item">@taskModel.TaskID - <span class="title">@taskModel.TaskTitle</span></h5>
                </div>
                <div class="task-body">
                    <p>@taskModel.TaskDescription</p>
                </div>
            </div>
            }
    </div>
    <div class="closed-container">
        <h4 class="task-heading task-section">Closed</h4>
        <button class="content-button add-task add-closed hvr-fade" id="3"><i class="glyphicon glyphicon-plus"></i></button>
        @foreach (TaskModel taskModel in Model.Where(model => model.TaskState.TaskStateCurrent == "Closed"))
            {
            <div class="closed task-item hvr-pop" id="@taskModel.TaskID">
                <div class="task-heading">
                    <h5 class="task-heading task-item">@taskModel.TaskID - <span class="title">@taskModel.TaskTitle</span></h5>
                </div>
                <div class="task-body">
                    <p>@taskModel.TaskDescription</p>
                </div>
            </div>
            }
    </div>
    <div class="modal-form-section"></div>
</div>